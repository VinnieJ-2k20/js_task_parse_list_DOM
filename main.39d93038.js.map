{"version":3,"sources":["scripts/main.js"],"names":["list","document","querySelector","sortList","subjectList","employees","sorted","querySelectorAll","sort","a","b","salaryA","getSalary","dataset","salary","salaryB","forEach","employee","append","getEmployees","map","name","textContent","position","age","Number","input","slice","split","join"],"mappings":";AAAA,aA0CC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAxCD,IAAMA,EAAOC,SAASC,cAAc,MAKpC,SAASC,EAASC,GACVC,IACAC,EAAS,EADGF,EAAYG,iBAAiB,OACjBC,KAAK,SAACC,EAAGC,GAC/BC,IAAAA,EAAUC,EAAUH,EAAEI,QAAQC,QAG7BC,OAFSH,EAAUF,EAAEG,QAAQC,QAEnBH,IAOZL,OAJPA,EAAOU,QAAQ,SAAAC,GACbb,EAAYc,OAAOD,KAGdX,EAGT,SAASa,EAAaf,GAGb,OAAA,EAFWA,EAAYG,iBAAiB,OAEzBa,IAAI,SAAAH,GACjB,MAAA,CACLI,KAAMJ,EAASK,YACfC,SAAUN,EAASJ,QAAQU,SAC3BT,OAAQF,EAAUK,EAASJ,QAAQC,QACnCU,IAAKC,OAAOR,EAASJ,QAAQW,QAKnC,SAASZ,EAAUc,GACVD,OAAAA,OAAOC,EACXC,MAAM,GACNC,MAAM,KACNC,KAAK,KApCV1B,EAASH,GACTmB,EAAanB","file":"main.39d93038.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst list = document.querySelector('ul');\n\nsortList(list);\ngetEmployees(list);\n\nfunction sortList(subjectList) {\n  const employees = subjectList.querySelectorAll('li');\n  const sorted = [...employees].sort((a, b) => {\n    const salaryA = getSalary(a.dataset.salary);\n    const salaryB = getSalary(b.dataset.salary);\n\n    return salaryB - salaryA;\n  });\n\n  sorted.forEach(employee => {\n    subjectList.append(employee);\n  });\n\n  return sorted;\n}\n\nfunction getEmployees(subjectList) {\n  const employees = subjectList.querySelectorAll('li');\n\n  return [...employees].map(employee => {\n    return {\n      name: employee.textContent,\n      position: employee.dataset.position,\n      salary: getSalary(employee.dataset.salary),\n      age: Number(employee.dataset.age),\n    };\n  });\n}\n\nfunction getSalary(input) {\n  return Number(input\n    .slice(1)\n    .split(',')\n    .join('')\n  );\n}\n"]}